
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://wkfzhcszhgewkvwukzes.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndrZnpoY3N6aGdld2t2d3VremVzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzg3MDE1NzksImV4cCI6MjA1NDI3NzU3OX0.TzSh8M9NOTnsmVaNxquif4xzSxWaVZp9sePHcjrgCVI";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

/**
 * Fetch all products from the database
 * @returns An array of products with their images
 */
export const fetchAllProducts = async () => {
  const { data: products, error } = await supabase
    .from('products')
    .select('*, product_images(*)')
    .order('created_at', { ascending: false });
    
  if (error) {
    console.error('Error fetching products:', error);
    throw new Error('Failed to fetch products');
  }
  
  return products;
};

/**
 * Fetch a single product by ID
 * @param productId The ID of the product to fetch
 * @returns The product with its images
 */
export const fetchProductById = async (productId: string) => {
  const { data: product, error } = await supabase
    .from('products')
    .select('*, product_images(*)')
    .eq('id', productId)
    .single();
    
  if (error) {
    console.error('Error fetching product:', error);
    throw new Error('Failed to fetch product');
  }
  
  return product;
};

/**
 * Fetch featured products
 * @returns An array of featured products
 */
export const fetchFeaturedProducts = async () => {
  // In a real app, you would have a featured flag in your products table
  // For now, we'll just return some of the products
  const { data: products, error } = await supabase
    .from('products')
    .select('*, product_images(*)')
    .limit(6);
    
  if (error) {
    console.error('Error fetching featured products:', error);
    throw new Error('Failed to fetch featured products');
  }
  
  return products;
};

/**
 * Fetch products by category
 * @param category The category to filter by
 * @returns An array of products in the specified category
 */
export const fetchProductsByCategory = async (category: string) => {
  // In a real app, you would have a category field in your products table
  // For now, we'll just return all products
  const { data: products, error } = await supabase
    .from('products')
    .select('*, product_images(*)')
    .order('created_at', { ascending: false })
    .limit(8);
    
  if (error) {
    console.error('Error fetching products by category:', error);
    throw new Error('Failed to fetch products by category');
  }
  
  return products;
};
